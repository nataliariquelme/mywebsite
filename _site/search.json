[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Natalia Riquelme",
    "section": "",
    "text": "Workshops\n Workshops conducted with R Ladies Chile and R Ladies Concepción\n\n\n\n\n\n    \n        \n          R Ladies/ español\n        \n        \n          4 min read\n        \n  \n  Aplicaciones prácticas con R\n  Taller R Ladies Chile \n  Jan 16, 2020\n\n\n\n\n\n\n\n\n\n    \n        \n          R Ladies/español\n        \n        \n          8 min read\n        \n  \n  Introducción a R\n  ¿Qué es R?\n  May 14, 2019\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Contact Me",
    "section": "",
    "text": "Your email:  \n Your message:\n\n\n\n\nSend"
  },
  {
    "objectID": "dataviz.html",
    "href": "dataviz.html",
    "title": "Natalia Riquelme",
    "section": "",
    "text": "Data Viz\n  Showcase of some of my data visualizations made in both R and JavaScript\n\n\n\n\n\nOde to Anni Albers\n\n\n\n\nOde to Sol Lewitt\n\n\n\n\nOde to Alfredo Hilto\n\n\n\n\nOde to Bridget Riley\n\n\n\n\nIje's Illusion\n\n\n\n\nPhish's Island Tour\n\n\n\n\nIje's Paths\n\n\n\n\nOde to Odili Donald Odita\n\n\n\n\nIje's Pie Chart\n\n\n\n\nShirley's Flowers\n\n\n\n\nIje's Spokes\n\n\n\n\nD3 Parade\n\n\n\n\nIje's Waves\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Natalia Riquelme",
    "section": "",
    "text": "Natalia Riquelme\n\n\nData analyst and research asistant\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBiography\n\nI’m studying for a master’s degree in statistics. I enjoy statistical computing, modeling, programming and open science. I am co-organizer of R Ladies Concepción, a diversity initiative to achieve proportional representation in the R community by encouraging, inspiring and empowering people of currently underrepresented genders in every role and area of participation, whether as leaders, package developers, conference speakers, conference participants, educators or users.\n\nEducation\n\n\n\n\n\nMSc in Statistics, 2023\n\n\nUniversidad Católica de Chile\n\n\n\n\n\n\n\nPolitical science and administration, 2020\n\n\nUniversidad de Concepción"
  },
  {
    "objectID": "posts/buenas_practicas/index.html",
    "href": "posts/buenas_practicas/index.html",
    "title": "Aplicaciones prácticas con R",
    "section": "",
    "text": "En este taller se repasaron algunos consejos para trabajar con R y no morir en el intento:\n\nSe curioso: La curiosidad es buena: Hazte preguntas sobre los datos que tienes, busca, informate. Esto aumentará tu interés y mejorará tu enfoque.\nNo te desanimes: Los lenguajes de programación no son simples de aprender, pero con trabajo y motivación veras como en poco tiempo lograrás grandes avances.\nNunca dejes de aprender: La web tiene tantos recursos gratuitos, consejos y tutoriales sobre cómo usar R; junto con paquetes de muestra que puedes descargar. ¡Úsalos para tu ventaja!"
  },
  {
    "objectID": "posts/buenas_practicas/index.html#prácticas-que-pueden-ayudarte",
    "href": "posts/buenas_practicas/index.html#prácticas-que-pueden-ayudarte",
    "title": "Aplicaciones prácticas con R",
    "section": "Prácticas que pueden ayudarte:",
    "text": "Prácticas que pueden ayudarte:\n\nDescarga e instala R & R Studio IDE (Interactive development environment): Estos permiten una revisión de sintaxis y completar los comandos de los objetos (TAB).\nPractica la instalación de paquetes: Puede usar http://swirlstats.com/ Es un sitio que te permite aprender R mientras estás usando R:\n\n## install.packages(swirl)\nlibrary(swirl)\n\nLeer la documentación: Utiliza todas las herramientas que que la web puede darte para aprender. Leer manuales y blogs puede ayudar mucho a tu conocimiento. La comunidad de R es bastante activa en twitter, por lo que esta herramienta tambien es de utilidad (tip: busca el hashtag #Rstats).\nUsa Github: Github es una interfaz gráfica web-based que funciona como servicio de alojamiento de repositorios, permitiendo alojar proyectos utilizando el sistema de control de versiones Git.\nUsa datos con los que te sientas cómoda/o: Al comenzar a aprender sobre el análisis de datos es recomendable usar datos que ya conoces, será más fácil entenderlo todo si está familiarizado con el tema / puntos de datos.\nVisualización: Ser creativo, crear cuadros y gráficos y volverlos coloridos permitirá ver lo que estás haciendo y te motivará a seguir adelante.\nComentarios: Agrega comentarios a tu código para que al volver a revisarlos puedas recordar qué es lo que querías hacer. Estos comentarios ayudarán a otros a entender tu código y cuando leas el código de alguien más podras saber qué es lo que quería lograr. Inserta comentarios comenzando la declaración con un signo # ctrl + shift + r"
  },
  {
    "objectID": "posts/buenas_practicas/index.html#crea-un-buen-script",
    "href": "posts/buenas_practicas/index.html#crea-un-buen-script",
    "title": "Aplicaciones prácticas con R",
    "section": "Crea un buen script",
    "text": "Crea un buen script\nUn buen script tiene 2 características:\n\nLos humanos pueden leerlo bien.\nEs lo más auto-explicativo posible.\n\n\nRecomendaciones:\nLa consistencia es clave y, como cualquier otro idioma, permite que otros te entiendan.\n\nHacer sangrías\nUsar espacios\n\nEs recomendado por varios expertos que se utilice '<-', ya que '=' es utilizado por muchas llamadas a funciones y definiciones. Alt + -"
  },
  {
    "objectID": "posts/buenas_practicas/index.html#crea-proyectos-y-gestionalos",
    "href": "posts/buenas_practicas/index.html#crea-proyectos-y-gestionalos",
    "title": "Aplicaciones prácticas con R",
    "section": "Crea proyectos y gestionalos:",
    "text": "Crea proyectos y gestionalos:\nUn proyecto en RStudio es una colección de trabajos organizados en una carpeta de trabajo. RStudio proporciona herramientas que te ayudarán a administrar tu trabajo en proyectos. RStudio recuerda qué archivos tenías abiertos y qué pestañas se mostraban cuando cierras un proyecto. Cuando abras el proyecto nuevamente, RStudio abrirá los mismos archivos y mostrará las mismas pestañas. Esto te permitirá retomar rápidamente tu trabajo.\n\nSugerencias para organizar carpetas dentro de un proyecto\n\nCrea una subcarpeta para tus datos originales\nCrea una subcarpeta para los datos limpios\nCrea una subcarpeta para sus scripts\nCrea una carpeta para cada documento\nCrea una carpeta si necesita guardar figuras\n\n\nDentro de sus carpeta de scripts puede ayudar la creación de varios\nficheros funcionales númerados, por ejemplo:\n\n00_load.R, puedes cargar tus datos en varios formatos\n01_clean.R, para limpiar los datos; típicamente, este fichero suele crecer a lo largo del análisis\n02_eda.R, para en análisis exploratorio y gráfico\n03_analysis_cca.R, por ejemplo\n04_analysis_reg.R, …"
  },
  {
    "objectID": "posts/buenas_practicas/index.html#atajos-de-teclado",
    "href": "posts/buenas_practicas/index.html#atajos-de-teclado",
    "title": "Aplicaciones prácticas con R",
    "section": "Atajos de teclado",
    "text": "Atajos de teclado\n\nR Studio nos entrega una enorme cantidad de Keyboard Shortcuts que te ayudaran a ahorrar tu recurso más valioso: Tiempo. Algunos de estos atajos son:\nCtrl / Cmd + Enter ejecuta la línea / bloque de código R en la consola R\nCtrl + 1 salta al script\nCtrl + 2 saltar a la consola R\nCtrl + W cerrar la pestaña abierta (variaciones: Ctrl + Shift + w/ Ctrl + Alt +Shift + w)\nCtrl + Shift + N nuevo script\nCtrl + Shift + C comentar la línea\nCtrl + Shift + R insertar salto de sección\nCtrl + Alt + i insertar un fragmento Rmd vacío\nAlt + - inserta el <-\nCtrl + Shift + M inserta el operador de la tubería %>%\nCtrl + D elimina toda la línea\nAlt + ↑/ ↓ Permite mover lineas de código"
  },
  {
    "objectID": "posts/buenas_practicas/index.html#code-snippets",
    "href": "posts/buenas_practicas/index.html#code-snippets",
    "title": "Aplicaciones prácticas con R",
    "section": "Code Snippets",
    "text": "Code Snippets\nLos Code Snippets o fragmentos de código son macros de texto que se utilizan para insertar rápidamente fragmentos comunes de código. Nos permiten ahorrar tiempo guardando la gramática de nuestros códigos más usados. Los code snippets pueden ser personalizados llendo a Tools > Code > Edit Snippets o a través de la siguiente linea de código:\n\nusethis::edit_rstudio_snippets()\n\nEspero que te sean útiles estos consejos! Puedes encontrar más información y algunos ejercicios en Github R Ladies Chile"
  },
  {
    "objectID": "posts/introduccion_a_r/index.html",
    "href": "posts/introduccion_a_r/index.html",
    "title": "Introducción a R",
    "section": "",
    "text": "Muchas empresas y universidades están utilizando el software R para sus análisis, además es uno de los lenguajes más utilizados en investigación científica, pero… ¿Sabemos qué es realmente R?, ¿Por qué me debería interesar? ¿Cómo me puede ayudar con mis análisis de datos?\nR es un lenguaje de programación, osea, un lenguaje formal que proporciona una serie de instrucciones que permiten a un programador escribir ordenes en secuencias y algoritmos. R es una herramienta estable, confiable y que se encuentra en permanente actualización para estar siempre a la vanguardia. Es muy poderoso para todo tipo de procesamiento y manipulación de datos, permitiendo crear gráficos de alta calidad, exportables en diversos formatos (además está disponible en todos los formatos)."
  },
  {
    "objectID": "posts/introduccion_a_r/index.html#cuáles-son-las-ventajas-de-usar-r",
    "href": "posts/introduccion_a_r/index.html#cuáles-son-las-ventajas-de-usar-r",
    "title": "Introducción a R",
    "section": "¿Cuáles son las ventajas de usar R?",
    "text": "¿Cuáles son las ventajas de usar R?\n\nSe vincula fácilmente con otros lenguajes y/o softwares como SPSS, SAS, Excel, Python, etc.\nSe pueden crear aplicaciones web interctivas (shiny)\n\nPuedes crear informes directos, dinámicos, en varios formatos (con markdown o quarto."
  },
  {
    "objectID": "posts/introduccion_a_r/index.html#cuáles-son-las-desventajas",
    "href": "posts/introduccion_a_r/index.html#cuáles-son-las-desventajas",
    "title": "Introducción a R",
    "section": "¿Cuáles son las desventajas?",
    "text": "¿Cuáles son las desventajas?\n\nR utiliza una consola de comandos en lugar de una interfaz gráfica\nRequiere de mucha práctica. Es complicado al principio, pero ser recompensada/o cuando veas análisis o gráficos aparecer sin problemas."
  },
  {
    "objectID": "posts/introduccion_a_r/index.html#r-studio-posit",
    "href": "posts/introduccion_a_r/index.html#r-studio-posit",
    "title": "Introducción a R",
    "section": "R Studio (Posit)",
    "text": "R Studio (Posit)\nEs un entorno de desarrollo integrado para el lenguaje de programación R, dedicado a la computación estadística y gráficos. Incluye una consola y editor de sintaxis que apoya la ejecución de código.\nAhora dejamos un script que puedes utilizar para practicar algunos conceptos básicos en tu computadora:\n\n## Introducción a R\n\n\"'\nEste script fue creado por Rladies Concepción. En este taller trabajamos Luisa Reyes, \nNatalia Riquelme, Carolina Oñate, Macarena Valenzuela y Camila Molina. \nHola!! Bienvenid@ al primer taller de R-Ladies Concepción!, queremos que te\nsientas cómod@ y con la libertad de plantearnos cualquier tipo de duda, estamos\npara apoyarte!\nSi tienes el programa R o RStudio instalado en tu Laptop, daremos inicio al\ntaller, en caso contrario, puedes dar aviso a una de las coordinadoras y te \nayudaremos con la instalación.\nSi tienes el programa R o RStudio instalado en tu ordenador, daremos inicio al\nprocedimiento, en caso contrario, puedes dar aviso a una de las coordinadoras y\nte ayudaremos con la instalación.\nRStudio es un entorno de desarrollo integrado para el lenguaje de programación R,\ndedicado a la computación estadística y gráficos.\nIncluye una consola y editor de sintaxis (script) que apoya la ejecución de código.\nR es un lenguaje de programación especialmente indicado para el análisis estadístico,\nsin embargo, actualmente es ampliamente utilizado por diversas disciplinas en muchas ámbitos.\n* R fue inicialmente diseñado por Robert Gentleman y Ross Ihaka, miembros del departamento de Estadística\nde la Universidad de Auckland, en Nueva Zelanda.\nUna de las grandes ventajas de R es que hoy en día es fruto del esfuerzo de miles de personas en todo el\nmundo que colaboran en su desarrollo.\nEl código de R está disponible como software libre bajo las condiciones de la licencia GNU/GPL.\nAdemás, pretenden que RStudio sea tan sencillo e intuitivo como sea posible para proporcionar un\nentorno amigable, tanto para los ya experimentados como para los nuevos usuarios de R.\n# <- Sirve para realizar comentarios en la consola.\nEsto se puede realizar anteponiendo el símbolo Hash (#) antes de tu código sin que se ejecuten los comandos.\nEl editor (Script), permite escribir, ejecutar y modificar las líneas de código y guardarlas para el futuro.\nPara ejecutar los códigos en RStudio se logra haciendo click en Run (Parte superior derecha del Script) o\nse puede ejecutar desde el editor, colocando el cursor en tu línea de comando (R script) presionando (ctrl + enter)\no desde MAC (cmd + enter).\n## Algo importante es que R es sensible a las mayúsculas y minúsculas, es decir, se debe respetar la sintaxis tal cual es.'\"\n\n[1] \"'\\nEste script fue creado por Rladies Concepción. En este taller trabajamos Luisa Reyes, \\nNatalia Riquelme, Carolina Oñate, Macarena Valenzuela y Camila Molina. \\nHola!! Bienvenid@ al primer taller de R-Ladies Concepción!, queremos que te\\nsientas cómod@ y con la libertad de plantearnos cualquier tipo de duda, estamos\\npara apoyarte!\\nSi tienes el programa R o RStudio instalado en tu Laptop, daremos inicio al\\ntaller, en caso contrario, puedes dar aviso a una de las coordinadoras y te \\nayudaremos con la instalación.\\nSi tienes el programa R o RStudio instalado en tu ordenador, daremos inicio al\\nprocedimiento, en caso contrario, puedes dar aviso a una de las coordinadoras y\\nte ayudaremos con la instalación.\\nRStudio es un entorno de desarrollo integrado para el lenguaje de programación R,\\ndedicado a la computación estadística y gráficos.\\nIncluye una consola y editor de sintaxis (script) que apoya la ejecución de código.\\nR es un lenguaje de programación especialmente indicado para el análisis estadístico,\\nsin embargo, actualmente es ampliamente utilizado por diversas disciplinas en muchas ámbitos.\\n* R fue inicialmente diseñado por Robert Gentleman y Ross Ihaka, miembros del departamento de Estadística\\nde la Universidad de Auckland, en Nueva Zelanda.\\nUna de las grandes ventajas de R es que hoy en día es fruto del esfuerzo de miles de personas en todo el\\nmundo que colaboran en su desarrollo.\\nEl código de R está disponible como software libre bajo las condiciones de la licencia GNU/GPL.\\nAdemás, pretenden que RStudio sea tan sencillo e intuitivo como sea posible para proporcionar un\\nentorno amigable, tanto para los ya experimentados como para los nuevos usuarios de R.\\n# <- Sirve para realizar comentarios en la consola.\\nEsto se puede realizar anteponiendo el símbolo Hash (#) antes de tu código sin que se ejecuten los comandos.\\nEl editor (Script), permite escribir, ejecutar y modificar las líneas de código y guardarlas para el futuro.\\nPara ejecutar los códigos en RStudio se logra haciendo click en Run (Parte superior derecha del Script) o\\nse puede ejecutar desde el editor, colocando el cursor en tu línea de comando (R script) presionando (ctrl + enter)\\no desde MAC (cmd + enter).\\n## Algo importante es que R es sensible a las mayúsculas y minúsculas, es decir, se debe respetar la sintaxis tal cual es.'\"\n\n################################################\n##           R como calculadora                #\n################################################\n\n# Comenzaremos haciendo nuestra primera suma, para esto no es necesario instalar o abrir ningún paquete,\n#podemos sumar cualquier número sin necesidad de asignar nombres a éstos, para demostrarlo necesitamos\n#que elijas tus números favoritos la suma de tus números es la siguiente:\n\n#inserta tu n° favorito 1 + inserta tu n° favorito 2\n\n# Algunos ejemplos sobre las operaciones que puedes realizar con R.\n\n#Suma y resta\n2+2\n\n[1] 4\n\n2-2\n\n[1] 0\n\n#División\n8 / 2\n\n[1] 4\n\n#Multiplicación\n2 * 2\n\n[1] 4\n\n#División entera, se devuelve la parte entera solamente\n5%/%2\n\n[1] 2\n\n#Módulo, resto de dividir un número por otro\n5%%2\n\n[1] 1\n\n#Potenciaciación\n2^3\n\n[1] 8\n\n#Número exponencial\nexp(2)\n\n[1] 7.389056\n\n#Raíz cuadrada\nsqrt(4)\n\n[1] 2\n\n#Un valor absoluto\nabs(-5)\n\n[1] 5\n\n# Valor de pi\npi\n\n[1] 3.141593\n\n#Factorial de un número\nfactorial(1:5)\n\n[1]   1   2   6  24 120\n\nfactorial(5)\n\n[1] 120\n\n###########################################################\n# Cosultas y ayuda                                        #\n###########################################################\n\n# Y también se puede pedir ayuda e información sobre paquetes o algunas con las siguientes instrucciones\n\nhelp(pi)\n\nstarting httpd help server ... done\n\nhelp(abs)\n\n?pi\n\n# Se despliega en un recuadro la información que has pedido, lo puedes intentar con lo que estimes conveniente :)\n\n###########################################################\n#   Inicio Vectores                                       #\n###########################################################\n\n# La estructura más básica en R es un vector. incluso si es un número singular como lo vimos en los ejemplos anteriores.\n# Un vector es básicamente una secuencia o un set de valores, los cuales pueden ser de tipo numérico, carácter o lógico.\n#Se asigna con \" <- \" y siempre antes de los paréntesis debe ir \"c\", como se muestra en los siguientes ejemplos.\n\nx <- c(1, 2, 3, 4, 5)\ny <- c(\"a\", \"b\", \"c\", \"d\", \"e\")\nz <- c(TRUE, TRUE, FALSE, TRUE, FALSE)\n\n# De esta manera, se puede llamar el vector desde ahora\nx\n\n[1] 1 2 3 4 5\n\ny\n\n[1] \"a\" \"b\" \"c\" \"d\" \"e\"\n\nz\n\n[1]  TRUE  TRUE FALSE  TRUE FALSE\n\n# Podemos crear un vector en forma abreviada y podemos realizar operaciones de suma de vectores.\n#Para esto podemos crear vectores usando: operadores (+,-,*, etc).\n\nx <- 1:5 #Podemos generar un vector secuencial sólo agregando el (\"número inicial:número final.\")\nx\n\n[1] 1 2 3 4 5\n\ny <- c(6, 7, 8, 9, 10)\ny\n\n[1]  6  7  8  9 10\n\nz <- x + y\nz\n\n[1]  7  9 11 13 15\n\n# Puedes ver claramente en los fragmentos de códigos anteriores que solo sumamos dos vectores\n# Usando solo el operador + se puede obtener el resultado. Esto es conocido como vectorización.\n\nMultpVectores <- c(1,3,5,7,9) * 2\n\n# Para sacar la raíz cuadrada del vector la función sqrt\n\nRaízVector <- sqrt(c(1,4,9,16))\nRaízVector\n\n[1] 1 2 3 4\n\n# Valores especiales en los vectores\n\n#Desde el comienzo en tus datos te encontrarás tratando con un montón de datos desordenados y sucios\n#en el proceso de análisis de datos.\n\n#Es importante recordar algunos de los valores especiales en R para que no te sorprendas cuando te\n#aparezcan en la consola.\n\n1/0\n\n[1] Inf\n\nInf # si aparece Inf en la consola quiere enunciar Infinito, en este caso es por Indefinición o indeterminació al dividir por 0.\n\n[1] Inf\n\n0/0\n\n[1] NaN\n\nNaN # si aparece NaN quiere decir que \"No es un Número\". Puede ser un vector categorial.\n\n[1] NaN\n\nInf/NaN\n\n[1] NaN\n\nInf/Inf\n\n[1] NaN\n\nlog(Inf)\n\n[1] Inf\n\nInf + NA\n\n[1] NA\n\n# si aparece NA indica un valor perdido o no disponible.\n\n# los siguientes fragmentos de códigos muestran algunos tests \"lógicos\" para R sobre estos valores especiales\n#y sus resultados. Hay que recodar que FALSE y TRUE son tipo de datos de valor lógico, similares a otros\n#lenguajes de programación.\n\nvec <- c(0, Inf, NaN, NA)\n\nis.finite (vec)\n\n[1]  TRUE FALSE FALSE FALSE\n\nis.nan(vec)\n\n[1] FALSE FALSE  TRUE FALSE\n\nis.na(vec)\n\n[1] FALSE FALSE  TRUE  TRUE\n\nis.infinite(vec)\n\n[1] FALSE  TRUE FALSE FALSE\n\n# Estas funciones son bastante autoexplicativas por sus propios nombres.\n#Ellas claramente indican cuales valores son infinitos y cuales son para \"NaN y NA\".\n\n#En el siguiente fragmento de códigos usaremos \"seq\" para realizar funciones que sirve para realizar vectores.\n\na <- c(2.5:4.5, 6,7, c(8, 9, 10), c(12:15))\na\n\n [1]  2.5  3.5  4.5  6.0  7.0  8.0  9.0 10.0 12.0 13.0 14.0 15.0\n\nb <- vector(\"numeric\", 5)\nb\n\n[1] 0 0 0 0 0\n\nc <- vector(\"logical\", 5)\nc\n\n[1] FALSE FALSE FALSE FALSE FALSE\n\nd <- logical(5)\nd\n\n[1] FALSE FALSE FALSE FALSE FALSE\n\n# \"seq\" es una función que crea secuencias\n\nseq(1,10)\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\nseq(1, 10, 2)\n\n[1] 1 3 5 7 9\n\nseq(10)\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\n#Una de las mas importantes operaciones que podemos hacer sobre vectores está relacionado con subconjuntos e\n#indexación de vectores para acceder a elementos específicos. Frecuentemente, se utiliza esta función cuando\n#queremos correr algún código sobre algún punto específico de la data.\n\n#Los siguientes ejemplos muestran algunas formas con las cuales podemos indexar y hacer subconjunto de vectores.\n\nvec <- c(\"R\", \"Python\", \"Julia\", \"Haskell\", \"Java\", \"Scala\")\n\n## ¿Qué hacen las siguientes sintaxis?\n\nvec[1]\n\n[1] \"R\"\n\nvec[-1]\n\n[1] \"Python\"  \"Julia\"   \"Haskell\" \"Java\"    \"Scala\"  \n\nvec[2:4]\n\n[1] \"Python\"  \"Julia\"   \"Haskell\"\n\nvec[c(1, 3, 5)]\n\n[1] \"R\"     \"Julia\" \"Java\" \n\nnums <- c(5, 8, 10, NA, 3, 11)\nnums\n\n[1]  5  8 10 NA  3 11\n\nwhich.min(nums) # índice del mínimo de elementos\n\n[1] 5\n\nwhich.max(nums) #índice de máximo de elementos\n\n[1] 6\n\nnums[which.min(nums)] # el elemento mínimo\n\n[1] 3\n\nnums [which.max(nums)] # el elemento máximo\n\n[1] 11\n\nwhich(is.na(nums)) #\n\n[1] 4\n\n#Nonbramiento de vectores\n#Esta es una ingeniosa característica de R donde puedes etiquetar acada elemento de un vector\n#para hacer mas legible o mas fácil la interpretación de los datos.\n#Existen dos formas en que se pueden etiquetar los vectores. Ambas dan los mismos resutados:\n\n# Forma 1\n\nc(first = 1, second = 2, third = 3, fourth = 4, fifth = 5)\n\n first second  third fourth  fifth \n     1      2      3      4      5 \n\n#Forma 2\n\npositions <- c(1,2,3,4,5)\nnames(positions)\n\nNULL\n\nnames (positions) <- c(\"first\", \"second\", \"third\", \"fourth\", \"fifth\")\npositions\n\n first second  third fourth  fifth \n     1      2      3      4      5 \n\nnames(positions)\n\n[1] \"first\"  \"second\" \"third\"  \"fourth\" \"fifth\" \n\npositions[c(\"second\", \"fourth\")]\n\nsecond fourth \n     2      4 \n\n#######################################\n#                MATRICES             #\n#######################################\n\n# Una matriz es un arreglo bidimensional de números.\n# Hay varias maneras de definir una matriz en R. Si es una matriz pequeña podemos utilizar la siguiente sintaxis:\n\n## Primero creamos el vector que queremos utilizar en la matriz.\ndatos <- c(1,2,3,4,5,6,7,8,9)\n\nA <- matrix(datos, nrow = 3, ncol = 3, byrow = TRUE)\n\n# Con el argumento nrow hemos indicado el número de filas de nuestra matriz,\n# con ncol el número de columnas;\n#a continuación hemos puesto los valores que forman la matriz (los valores del 1 al 9), y le hemos pedido a R\n#que use esos valores para rellenar la matriz A por filas (byrow=TRUE).\n\n#La matriz A construída:\n\nA\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n[3,]    7    8    9\n\n#Comprobar como queda la matriz con byrow=FALSE\n\nA <- matrix(datos, nrow = 3, ncol = 3, byrow = FALSE)\n\nA\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n## Podemos nombrar cada columna\ncolnames(A) <- c(\"first\", \"second\", \"third\")\nA\n\n     first second third\n[1,]     1      4     7\n[2,]     2      5     8\n[3,]     3      6     9\n\nrownames(A) <- c(\"R\", \"Julia\",\"Python\")\nA\n\n       first second third\nR          1      4     7\nJulia      2      5     8\nPython     3      6     9\n\n#Si disponemos de varios vectores de la misma longitud que queremos utilizar como filas (o columnas)\n#de una matriz, podemos utilizar la función rbind() para unirlos por filas, o la función cbind() para\n#unirlos por columnas, como vemos en el siguiente ejemplo:\n\nvector1 <- c(1, 2, 3, 4)\nvector2 <- c(5, 6, 7, 8)\nvector3 <- c(9, 10, 11, 12)\n\nM1 <- cbind(vector1, vector2, vector3) # Unimos por columnas\nM1\n\n     vector1 vector2 vector3\n[1,]       1       5       9\n[2,]       2       6      10\n[3,]       3       7      11\n[4,]       4       8      12\n\n# Utilizando rbind, compara el resultado con la matriz M1 anterior.\n\nM2 <- rbind(vector1, vector2, vector3) # Unimos por filas\nM2\n\n        [,1] [,2] [,3] [,4]\nvector1    1    2    3    4\nvector2    5    6    7    8\nvector3    9   10   11   12\n\n#Se pueden seleccionar partes de una matriz utilizando los índices de posición [fila, columna] entre corchetes.\n#El siguiente ejemplo ilustra la forma de hacerlo:\n\nA[2,3]   # Se selecciona el valor de la fila 2, columna 3\n\n[1] 8\n\nA[2,]    # Se selecciona la fila 2 completa\n\n first second  third \n     2      5      8 \n\nA[,3]    # Se selecciona la columna 3 completa\n\n     R  Julia Python \n     7      8      9 \n\nA[1,2:3] # Se seleccionan el segundo y tercer valor de la fila 1\n\nsecond  third \n     4      7 \n\ndim(A) #Permite conocer las dimensiones de la matriz, cuantas columnas y filas tiene el arreglo.\n\n[1] 3 3\n\n#Operaciones con matrices\n#La función diag() extrae la diagonal principal de una matriz:\n\ndiag(A)\n\n[1] 1 5 9\n\n#También permite crear matrices diagonales:\n\ndiag(c(1,2,3,4))\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    0    0    0\n[2,]    0    2    0    0\n[3,]    0    0    3    0\n[4,]    0    0    0    4\n\n## Multiplicación de matrices.\n\nM1 %*% M2\n\n     [,1] [,2] [,3] [,4]\n[1,]  107  122  137  152\n[2,]  122  140  158  176\n[3,]  137  158  179  200\n[4,]  152  176  200  224\n\n## Transponer una matriz\n\nM1\n\n     vector1 vector2 vector3\n[1,]       1       5       9\n[2,]       2       6      10\n[3,]       3       7      11\n[4,]       4       8      12\n\nt(M1)\n\n        [,1] [,2] [,3] [,4]\nvector1    1    2    3    4\nvector2    5    6    7    8\nvector3    9   10   11   12\n\n## suma de matrices\nM1 + t(M2)\n\n     vector1 vector2 vector3\n[1,]       2      10      18\n[2,]       4      12      20\n[3,]       6      14      22\n[4,]       8      16      24"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Natalia Riquelme",
    "section": "",
    "text": "projects\n  Libraries, Packages, and Visualizations I've worked on in Open Source\n\n\n\nshow all\n  javascript\n  shiny\n  r\n\n\n\n\n\n\n\ntidyblocks\n\na block based coding language to learn R programming\n\n\n\n\n\n\n\n\nshinybody\n\na custom shiny input boinding to click on body parts\n\n\n\n\n\n\n\n\nmastering shiny solutions manual\n\nthe solution manual to Hadley Wickham's Mastering Shiny\n\n\n\n\n\n\n\n\ndinner and a movie\n\na svelte application to look at Phish statistics\n\n\n\n\n\n\n\n\ngithub calendar\n\na custom htmlwidget of a github calendar using d3.js\n\n\n\n\n\n\n\n\nphishr\n\na wrapper package around the phish.net API\n\n\n\n\n\n\n\n\ntidycdisc\n\na table generating GUI for clinical trial data\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Natalia Riquelme",
    "section": "",
    "text": "Natalia Riquelme\n\n\nData analyst and research asistant\n\n\n\n\nI’m a data analyst and research assistant. I’m studying for a master’s degree in statistics. I enjoy statistical computing, modeling, programming and open science. I am co-organizer of R Ladies Concepción, a diversity initiative to achieve proportional representation in the R community by encouraging, inspiring and empowering people of currently underrepresented genders in every role and area of participation, whether as leaders, package developers, conference speakers, conference participants, educators or users\n\n\n\n\nExperience\n\n\n\n\n\nData analyst\n2022-Present\nCienciambiental Consulting\nPrepare reports, inputs and specific tasks associated with ongoing projects such as databases, spatial information, bibliographic reviews, data collection and analysis. Design, schedule, and execute data science analytics. Data analysis and visualization. Support in the implementation of the data management system. Design and implement technical protocols and internal security standards or those requested by the client companies\n\n\n\n\nResearch asistant\n2022-present\nOLES\nLongitudinal survey data analysis. Writing and editing reports. Visualization of results. Netifly website maintenance.\n\n\n\n\nProject Coordinator\n2021-2022\nCOES\nCoordination of the FONDAP project COES 15130009. Support for the 4 research lines of the center. Writing and editing reports. Project coordination LISA - Open Social Science Laboratory.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEducation\n\n\n\n\n\nMaster in Statistics\nPontificia Universidad Católica de Chile\n2021-2023\n\n\n\n\nPolitical and Administrative Sciences\nUniversidad de Concepción\n2015-2020\n\n\n\n\n\n\nSkills\n\n\n\n\n\n\n\nR\n\n\n\n\n\n\n\n\n\n\nGit & github\n\n\n\n\n\n\n\n\n\n\nstatistics\n\n\n\n\n\n\n\n\n\n\nopen science\n\n\n\n\n\n\n\n\n\n\n\n\nExpertise\n\n\n\n\n\ndata analysis\nvisualization\nopen science\nmodeling\n\n\n\n\n\n\nScholarships\n\n\n\n\n\nANID national master's scholarship 2021\nFinancial support to obtain a master's degree in accredited programs taught by Chilean universities\n\n\n\n\nFaculty registration Scholarship 2021\nFor the financing of the total fee of the master's degree at the Catholic University of Chile"
  }
]